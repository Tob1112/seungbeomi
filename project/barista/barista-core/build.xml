<?xml version="1.0" encoding="UTF-8"?>
<project name="barista-core" basedir="." default="all" xmlns:ivy="antlib:org.apache.ivy.ant">

	<!-- ========================================== -->
    <!-- CLASSPATH									-->
    <!-- ========================================== -->
	<property file="build.properties" />
	<property name="src.dir" value="src/main/java"/>
	<property name="resources.dir" value="src/main/resources"/>
	<property name="test.src.dir" value="src/test/java"/>
	<property name="test.resources.dir" value="src/test/resources"/>
	<property name="lib.dir" value="lib"/>
	<property name="dist.dir" value="dist"/>
	<property name="build.dir" value="build"/>

    <!-- ========================================== -->
    <!-- CLASSPATH									-->
    <!-- ========================================== -->
    <path id="classpath">
    	<fileset dir="${repository.dir}" includes="*.jar" />
        <fileset dir="${lib.dir}" includes="*.jar" />
        <pathelement path="${build.dir}" />
    </path>

    <!-- ========================================== -->
    <!-- TARGETS									-->
    <!-- ========================================== -->
	<target name="init">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${lib.dir}"/>
	</target>

	<!-- IVY -->
	<target name="ivy-resolve" description="--> retreive dependencies with ivy">
		<ivy:retrieve />
		<!--<ivy:retrieve pattern="${ivy.lib.dir}/[artifact]-[revision].[ext]"/>-->
    </target>
	<target name="ivy-clean-cache" description="--> clean the ivy cache">
		<ivy:cleancache />
	</target>

    <target name="compile" description="Compile main source tree java files">
        <javac destdir="${build.dir}" debug="true" optimize="false" deprecation="false" failonerror="true" encoding="UTF-8" includeantruntime="false">
            <src path="${src.dir}" />
            <classpath refid="classpath" />
        </javac>

        <!-- Copy XML files to ${build.dir}/build -->
        <!--
    	<copy todir="${build.dir}">
            <fileset dir="${src.dir}" includes="**/*.java" />
            <fileset dir="${resources.dir}" includes="**/*.xml,**/*.properties" />
        </copy>
        -->
    </target>

    <target name="dist" description="Deploy application">
		<jar jarfile="${dist.dir}/${app.name}.jar" manifest="./META-INF/MANIFEST.MF" basedir="${build.dir}" includes="**/*.class,**/*.java,*.xml,*.properties" />
	</target>

	<target name="deploy">

		<!-- COPY JAR FILE -->
		<!--
		<copy todir="${common.lib.dir}" preservelastmodified="true">
            <fileset dir="${dist.dir}" />
        </copy>
        <copy todir="${domain.lib.dir}" preservelastmodified="true">
            <fileset dir="${dist.dir}" />
        </copy>
        <copy todir="${webapp.lib.dir}" preservelastmodified="true">
            <fileset dir="${dist.dir}" />
        </copy>
		<copy todir="${appengine.lib.dir}" preservelastmodified="true">
            <fileset dir="${dist.dir}" />
        </copy>
        -->
		<copy todir="${chronos.lib.dir}" preservelastmodified="true">
            <fileset dir="${dist.dir}" />
        </copy>

		<!-- COPY RESOURCES FILE -->
		<!--
		<copy todir="${common.resources.dir}" preservelastmodified="true">
            <fileset dir="${resources.dir}" />
        </copy>
		<copy todir="${domain.resources.dir}" preservelastmodified="true">
            <fileset dir="${resources.dir}" />
        </copy>
		<copy todir="${webapp.resources.dir}" preservelastmodified="true">
            <fileset dir="${resources.dir}" />
        </copy>
        -->
	</target>

    <target name="clean" description="Clean output directories">
    	<delete dir="${build.dir}" />
    	<delete dir="${dist.dir}" />
    </target>

    <target name="all" depends="clean, init, compile, dist, deploy, clean" />


	<!-- =================================== -->
	<property name="findbugs.home" value="C:/development/findbugs-1.3.9" />
	<taskdef name="findbugs"
		classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
		classpath="${findbugs.home}/lib/findbugs-ant.jar"/>
	<target name="findbugs" depends="dist">
	    <findbugs home="${findbugs.home}"
	              output="html"
	              outputFile="bcel-fb.html" >
	      <!--<auxClasspath path="${basedir}/lib/Regex.jar" />-->
	      <sourcePath path="${src.dir}" />
	      <class location="${findbugs.home}/lib/bcel.jar" />
	    </findbugs>
	  </target>
</project>