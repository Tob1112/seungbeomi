<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<security:global-method-security>
		<security:protect-pointcut expression="execution(public * seungbeomi.user..*.*(..))" access="ROLE_ADMIN, ROLE_USER, ROLE_ANONYMOUS"/>
		<!--
		<security:protect-pointcut expression="execution(public * seungbeomi.user..*.delete*(..))" access="ROLE_ADMIN"/>
		<security:protect-pointcut expression="execution(public * seungbeomi.user..*.get*(..))" access="ROLE_USER"/>
		-->
	</security:global-method-security>

	<!--<security:http auto-config="true" entry-point-ref="preAuthenticatedEntryPoint"/>-->
	<security:http auto-config="true">
		<security:intercept-url pattern="index.html" filters="none"/>
		<security:intercept-url pattern="*.swf" filters="none"/>
		<security:intercept-url pattern="*.html" access="ROLE_USER"/>
		<!--<security:remember-me user-service-ref="userService"/>-->
	</security:http>

	<bean id="preAuthenticatedEntryPoint"
		class="org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterEntryPoint"/>

	<bean id="loggerListener"
		class="org.springframework.security.event.authentication.LoggerListener" />

	<security:authentication-provider>
		<!--<security:password-encoder hash="md5"/>-->
		<security:jdbc-user-service
			role-prefix="ROLE_"
        	data-source-ref="dataSource"
        	users-by-username-query="SELECT user_id, password, true as enabled FROM userinfo WHERE user_id 	= ?"
        	authorities-by-username-query="SELECT u.user_id, ga.authority FROM userinfo u, group_authorities ga WHERE u.group_id = ga.group_id AND u.user_id = ?"
        	group-authorities-by-username-query="SELECT g.id, g.group_name, ga.authority FROM groups g, group_members gm, group_authorities ga WHERE gm.username = ? AND g.id = ga.group_id AND g.id = gm.group_id"/>
	</security:authentication-provider>
</beans>