<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.1.xsd">

    <security:global-method-security secured-annotations="enabled">
        <security:protect-pointcut expression="execution(public * org.chronos.*.*(..))" access="ROLE_ADMIN,ROLE_USER" />
    </security:global-method-security>

    <security:http auto-config="true">
    	<!-- Restrict URLs based on role -->
        <security:intercept-url pattern="/main.html" filters="none" />
        <security:intercept-url pattern="*.swf" filters="none" />
        <security:intercept-url pattern="*.html" access="IS_AUTHENTICATED_ANONYMOUSLY,ROLE_USER" />
        <!--<security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>-->

        <security:form-login login-page="/error.html" authentication-failure-url="/error.html"/>
        <security:logout logout-success-url="/main.html"/>
    </security:http>

    <!-- Automatically receives AuthenticationEvent messages -->
    <bean id="loggerListener" class="org.springframework.security.event.authentication.LoggerListener" />

    <!--<security:authentication-provider>
        <security:user-service>
            <security:user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN"/>
            <security:user name="son" password="son" authorities="ROLE_USER, ROLE_ADMIN"/>
            <security:user name="user" password="user" authorities="ROLE_USER"/>
        </security:user-service>
    </security:authentication-provider>-->

    <security:authentication-provider>
        <security:jdbc-user-service
            role-prefix="ROLE_"
            data-source-ref="dataSource"
            users-by-username-query="SELECT USERNAME, PASSWORD, ENABLED FROM USERINFO WHERE USERNAME = ?"
            authorities-by-username-query="SELECT U.USERNAME AS USERNAME, A.AUTHORITY AS AUTHORITIES FROM USERINFO U, AUTHORITIES A WHERE U.USERNAME = A.USERNAME AND U.USERNAME = ?"/>
    </security:authentication-provider>
</beans>