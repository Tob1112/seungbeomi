<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<description>Example job to get you started. It provides a skeleton for a typical batch application.</description>
 	
 	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
 		<property name="jobRepository" ref="jobRepository"/>
 		<property name="taskExecutor">
 			<bean class="org.springframework.core.task.SimpleAsyncTaskExecutor"/>
 		</property>
 	</bean>
 	
	<batch:job id="job1">
		<batch:step id="step1">
			<!-- tasklet : 내부에서 처리한 결과를 만들어냄 -->		
			<batch:tasklet transaction-manager="transactionManager" start-limit="100" >
				<!-- chunk : 배치처리의 가장 중요한 묶음 기반 처리 -->
				<!-- commit-interval : 커밋 간격 -->
				<batch:chunk 
					reader="csvFileReader"
					processor="userRegistrationValidationItemProcessor"
					writer="jdbcItemWriter" 
					commit-interval="3" />
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<bean id="csvFileReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:data/data.csv"/>
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value=","/>
						<property name="names" value="firstName,lastName,company,address,city,state,zip,county,url,phoneNumber,fax"/>
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="targetType" value="seungbeomi.spring.batch.UserRegistration"/>
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="jdbcItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="assertUpdates" value="true"/>
		<property name="dataSource" ref="dataSource"/>
		<property name="sql" value="
			INSERT /* jdbcItemWriter.sql */ INTO USER_REGISTRATION(FIRST_NAME, LAST_NAME, COMPANY, ADDRESS, CITY, STATE, ZIP, COUNTY, URL, PHONE_NUMBER, FAX)
			VALUES ( :firstName, :lastName, :company, :address, :city, :state, :zip, :county, :url, :phoneNumber, :fax)"/>
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
		</property>
	</bean>
	
</beans>
