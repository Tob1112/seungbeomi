<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.1.xsd">

	<security:global-method-security>
		<security:protect-pointcut expression="execution(public * com.prms..*.*(..))" access="ROLE_ANONYMOUS"/>
	</security:global-method-security>

	<!--<security:http auto-config="true">
		<security:intercept-url pattern="/index.html" filters="none"/>
		<security:intercept-url pattern="*.swf" filters="none"/>
		<security:intercept-url pattern="*.html" access="ROLE_USER"/>
		<security:intercept-url pattern="/com/prms/**" access="ROLE_USER, ROLE_ADMIN, ROLE_ANONYMOUS"/>
		<security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
	</security:http>-->
	<security:http auto-config="true"/>

	<!--<bean id="preAuthenticatedEntryPoint" class="org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterEntryPoint"/>-->
	<bean id="loggerListener" class="org.springframework.security.event.authentication.LoggerListener" />

	<security:authentication-provider>
		<security:password-encoder hash="md5" />
		<security:jdbc-user-service
			role-prefix="ROLE_"
        	data-source-ref="dataSource"
        	users-by-username-query="SELECT USER_ID AS USERNAME, PASSWORD,1 AS ENABLE FROM USERS WHERE USER_ID = ?"
        	authorities-by-username-query="SELECT U.USER_ID AS USERNAME, A.AUTHORITY AS AUTHORITIES FROM USERS U, AUTHORITIES A WHERE U.USER_ID = A.USER_ID AND U.USER_ID = ?"/>
	</security:authentication-provider>

</beans>